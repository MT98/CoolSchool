<?php

namespace CS\PlatformHandlingBundle\Repository;

use Symfony\Bridge\Doctrine\Security\User\UserLoaderInterface;

/**
 * CoolSchoolEmployeeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CoolSchoolEmployeeRepository extends \Doctrine\ORM\EntityRepository implements UserLoaderInterface
{
    /*On selectionne celui qui a $username en tant que email ou password et autorisant les deux pour l'authentification*/
    /* ou celui qui a $username en tant que username et n'autorisant que username pour l'authentification et non l'email */
    public function loadUserByUsername($username)
    {
        return $this->createQueryBuilder('coolschoolemployee')
            ->where('((coolschoolemployee.username = :username OR coolschoolemployee.email = :email) AND coolschoolemployee.onlyUsernameForAuthentification = false) OR (coolschoolemployee.username = :username AND coolschoolemployee.onlyUsernameForAuthentification = true)')
            ->setParameter('username', $username)
            ->setParameter('email', $username)
            ->getQuery()
            ->getOneOrNullResult();
    }

    public function getEmployeeRelatedToThisToken($confirmationToken)
    {
        $qb = $this->createQueryBuilder('coolschoolemployee');
        $qb->where('coolschoolemployee.confirmationToken = :token');
        $qb->setParameter('token', $confirmationToken);

        return $qb->getQuery()->getOneOrNullResult();
    }

    public function getEmployeeWithAllInfo($id)
    {
        $qb = $this->createQueryBuilder('coolschoolemployee');
        $qb->leftJoin('coolschoolemployee.photo', 'ima')->addSelect('ima');
        $qb->leftJoin('coolschoolemployee.country', 'coun')->addSelect('coun');
        $qb->leftJoin('coolschoolemployee.works', 'ad')->addSelect('ad');
        $qb->where('coolschoolemployee.id = :id');
        $qb->setParameter('id', $id);

        return $qb->getQuery()->getOneOrNullResult();
    }

    public function getAllEmployees()
    {
        $qb = $this->createQueryBuilder('coolschoolemployee');
        $qb->leftJoin('coolschoolemployee.photo', 'ima')->addSelect('ima');
        $qb->leftJoin('coolschoolemployee.country', 'coun')->addSelect('coun');
        $qb->leftJoin('coolschoolemployee.works', 'ad')->addSelect('ad');
        
        $qb->orderBy('coolschoolemployee.lastName', 'asc');
        $qb->addOrderBy('coolschoolemployee.firstName', 'asc');

        return $qb->getQuery()->getResult();
    }
}
