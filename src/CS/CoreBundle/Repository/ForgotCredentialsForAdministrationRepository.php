<?php

namespace CS\CoreBundle\Repository;

/**
 * ForgotCredentialsForAdministrationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ForgotCredentialsForAdministrationRepository extends \Doctrine\ORM\EntityRepository
{
    public function count()
    {
        $qb = $this->_em->createQueryBuilder()
        ->select("COUNT(f.id)")->from($this->_entityName, 'f');
        
        return $qb->getQuery()->getSingleScalarResult();
    }

    /* cette retourne le lien correct s'il existe cad qui n'as pas expiré et donc le code est correct */
    public function getNotUsedItem(string $what, string $code)
    {
        $qb = $this->createQueryBuilder('f');
        $qb->where('f.code = :code');
        $qb->andWhere('f.what = :what AND f.expired=false');
        $qb->andWhere('f.expirationDate > CURRENT_TIMESTAMP()');
        $qb->setParameters(array('code'=>$code, 'what'=>$what));


        return $qb->getQuery()->getOneOrNullResult();
    }

    /* cette retourne et l'employe et le lien correct s'il existe cad qui n'as pas expiré et donc le code est correct */
    public function getNotUsedItemWithEmployee(string $what, string $code)
    {
        $qb = $this->createQueryBuilder('f');
        $qb->leftJoin('f.employee', 'c');
        $qb->addSelect('c');
        $qb->where('f.code = :code');
        $qb->andWhere('f.what = :what AND f.expired=false');
        $qb->andWhere('f.expirationDate > CURRENT_TIMESTAMP()');
        $qb->setParameters(array('code'=>$code, 'what'=>$what));


        return $qb->getQuery()->getOneOrNullResult();
    }
}
